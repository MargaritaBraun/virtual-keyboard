{"version":3,"file":"main.js","mappings":"mBAAO,MAAMA,EACXC,aAAY,MAAEC,EAAK,KAAEC,IACnBC,KAAKF,MAAQA,EACbE,KAAKD,KAAOA,CACd,CAEAE,cACE,IAAIC,EAAW,GACXC,EAAWC,SAASC,cAAc,UAGtC,GAFAF,EAASG,UAAY,MACrBC,QAAQC,IAAIL,GACRH,KAAKD,KAAM,CACb,IAAIU,EAAW,GAAGT,KAAKD,OACvBI,EAASO,MAAMC,MAAQF,CACzB,CAQA,OAPAN,EAASS,aAAa,QAASZ,KAAKF,OAChCE,KAAKF,QACPI,GAAY,UAAUF,KAAKF,QACzBI,GAAY,WAGhBC,EAASU,UAAYX,EACdC,CACT,ECnBF,IAAIW,EAAgBV,SAASW,cAAc,mBAStB,CAACC,IACpB,IAAIC,EAAO,GAIX,OAHAD,EAAKE,SAASC,IACZF,EAAKG,KAAK,IAAIxB,EAAUuB,GAAK,IAExBF,CAAI,EATXI,CCTkB,CAClB,CACEvB,MAAO,IACPC,KAAM,SAER,CACED,MAAO,IACPC,KAAM,QAER,CACED,MAAO,IACPC,KAAM,QAER,CACED,MAAO,IACPC,KAAM,SAER,CACED,MAAO,IACPC,KAAM,UDVWmB,SAASf,IAC1BW,EAAcQ,OAAOnB,EAASF,cAAc,G","sources":["webpack://my-webpack-project/./src/key-module.js","webpack://my-webpack-project/./src/index.js","webpack://my-webpack-project/./src/key.js"],"sourcesContent":["export class KeyButton {\n  constructor({ value, size }) {\n    this.value = value;\n    this.size = size;\n  }\n\n  generateKey() {\n    let template = \"\";\n    let keyboard = document.createElement(\"button\");\n    keyboard.className = \"key\";\n    console.log(keyboard)\n    if (this.size) {\n      let pullsize = `${this.size}`;\n      keyboard.style.width = pullsize;\n    }\n    keyboard.setAttribute(\"value\", this.value);\n    if (this.value) {\n      template += `<span\">${this.value}`;\n        template += \"</span>\";\n    }\n\n    keyboard.innerHTML = template;\n    return keyboard;\n  }\n}\n","/* eslint-disable no-undef */\nimport { KeyButton } from \"./key-module\";\nimport { data } from \"./key\";\n\nlet placeKeyboard = document.querySelector(\".key__container\");\n\n// eslint-disable-next-line no-shadow\nconst renderKeyboardToDom = () => {\n  // eslint-disable-next-line no-use-before-define\n  generateKeys(data).forEach((keyboard) => {\n    placeKeyboard.append(keyboard.generateKey());\n  });\n};\nconst generateKeys = (data) => {\n  let keys = [];\n  data.forEach((key) => {\n    keys.push(new KeyButton(key));\n  });\n  return keys;\n};\nrenderKeyboardToDom(data);\n\n\n","export const data = [\n  {\n    value: \"h\",\n    size: \"100px\",\n  },\n  {\n    value: \"f\",\n    size: \"30px\",\n  },\n  {\n    value: \"j\",\n    size: \"50px\",\n  },\n  {\n    value: \"K\",\n    size: \"130px\",\n  },\n  {\n    value: \"L\",\n    size: \"30px\",\n  },\n];\n"],"names":["KeyButton","constructor","value","size","this","generateKey","template","keyboard","document","createElement","className","console","log","pullsize","style","width","setAttribute","innerHTML","placeKeyboard","querySelector","data","keys","forEach","key","push","generateKeys","append"],"sourceRoot":""}