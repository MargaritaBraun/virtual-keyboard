{"version":3,"file":"main.js","mappings":"mBAAO,MAAMA,EACXC,aAAY,MACVC,EAAK,KAAEC,EAAI,MAAEC,EAAK,KAAEC,IAEpBC,KAAKJ,MAAQA,EACbI,KAAKH,KAAOA,EACZG,KAAKF,MAAQA,EACbE,KAAKD,KAAOA,CACd,CAEAE,cACE,IAAIC,EAAW,GACXC,EAAWC,SAASC,cAAc,UAEtC,GADAF,EAASG,UAAY,MACjBN,KAAKH,KAAM,CACb,IAAIU,EAAW,GAAGP,KAAKH,OACvBM,EAASK,MAAMC,MAAQF,CACzB,CASA,OARAJ,EAASO,aAAa,QAASV,KAAKJ,OAChCI,KAAKJ,QACPM,GAAY,UAAUF,KAAKJ,QAC3BM,GAAY,WAEVF,KAAKF,OAAOK,EAASO,aAAa,QAASV,KAAKF,OAChDE,KAAKD,MAAMI,EAASO,aAAa,OAAQV,KAAKD,MAClDI,EAASQ,UAAYT,EACdC,CACT,EC3BF,MAAMS,EAAQ,OACRC,EAAM,OACNC,EAAS,OACTC,EAAS,SAEFC,EAAO,CAClB,CACEpB,MAAO,IACPC,KAAMe,GAER,CACEhB,MAAO,IACPC,KAAMe,GAER,CACEhB,MAAO,IACPC,KAAMe,GAER,CACEhB,MAAO,IACPC,KAAMe,GAER,CACEhB,MAAO,IACPC,KAAMe,GAER,CACEhB,MAAO,IACPC,KAAMe,GAER,CACEhB,MAAO,IACPC,KAAMe,GAER,CACEhB,MAAO,IACPC,KAAMe,GAER,CACEhB,MAAO,IACPC,KAAMe,GAER,CACEhB,MAAO,IACPC,KAAMe,GAER,CACEhB,MAAO,IACPC,KAAMe,GAER,CACEhB,MAAO,IACPC,KAAMe,GAER,CACEhB,MAAO,IACPC,KAAMe,GAER,CACEhB,MAAO,YACPC,KAAMgB,EACNf,OAAO,GAET,CACEF,MAAO,MACPC,KAAM,KAER,CACED,MAAO,IACPC,KAAMe,GAER,CACEhB,MAAO,IACPC,KAAMe,GAER,CACEhB,MAAO,IACPC,KAAMe,GAER,CACEhB,MAAO,IACPC,KAAMe,GAER,CACEhB,MAAO,IACPC,KAAMe,GAER,CACEhB,MAAO,IACPC,KAAMe,GAER,CACEhB,MAAO,IACPC,KAAMe,GAER,CACEhB,MAAO,IACPC,KAAMe,GAER,CACEhB,MAAO,IACPC,KAAMe,GAER,CACEhB,MAAO,IACPC,KAAMe,GAER,CACEhB,MAAO,IACPC,KAAMe,GAER,CACEhB,MAAO,IACPC,KAAMe,GAER,CACEhB,MAAO,KACPC,KAAMe,EACNd,OAAO,GAET,CACEF,MAAO,YACPC,KAAMkB,GAER,CACEnB,MAAO,IACPC,KAAMe,GAER,CACEhB,MAAO,IACPC,KAAMe,GAER,CACEhB,MAAO,IACPC,KAAMe,GAER,CACEhB,MAAO,IACPC,KAAMe,GAER,CACEhB,MAAO,IACPC,KAAMe,EACNb,KAAM,QAER,CACEH,MAAO,IACPC,KAAMe,EACNb,KAAM,QAER,CACEH,MAAO,IACPC,KAAMe,GAER,CACEhB,MAAO,IACPC,KAAMe,GAER,CACEhB,MAAO,IACPC,KAAMe,GAER,CACEhB,MAAO,IACPC,KAAMe,GAER,CACEhB,MAAO,IACPC,KAAMe,GAER,CACEhB,MAAO,QACPC,KAAMkB,EACNjB,OAAO,GAET,CACEF,MAAO,QACPC,KAAMgB,GAER,CACEjB,MAAO,IACPC,KAAMe,GAER,CACEhB,MAAO,IACPC,KAAMe,GAER,CACEhB,MAAO,IACPC,KAAMe,GAER,CACEhB,MAAO,IACPC,KAAMe,GAER,CACEhB,MAAO,IACPC,KAAMe,GAER,CACEhB,MAAO,IACPC,KAAMe,GAER,CACEhB,MAAO,IACPC,KAAMe,GAER,CACEhB,MAAO,IACPC,KAAMe,GAER,CACEhB,MAAO,IACPC,KAAMe,GAER,CACEhB,MAAO,IACPC,KAAMe,GAER,CACEhB,MAAO,QACPC,KAAMgB,EACNf,OAAO,GAET,CACEF,MAAO,OACPC,KAAMe,GAER,CACEhB,MAAO,KACPC,KAAMe,GAER,CACEhB,MAAO,MACPC,KAAMe,GAER,CACEhB,MAAO,MACPC,KAAMiB,GAER,CACElB,MAAO,GACPC,KA9OU,SAgPZ,CACED,MAAO,MACPC,KAAMiB,GAER,CACElB,MAAO,KACPC,KAAMe,GAER,CACEhB,MAAO,OACPC,KAAMe,GAER,CACEhB,MAAO,IACPC,KAAMe,GAER,CACEhB,MAAO,IACPC,KAAMe,GAER,CACEhB,MAAO,IACPC,KAAMe,ICpQV,IAAIK,EAAgBb,SAASc,cAAc,mBAC3C,MAAMC,EAAef,SAASc,cAAc,qBAC5C,IAAIE,EAAcD,EAAavB,MAUV,MACnB,IAAIyB,EAAO,GAIX,OAHAL,EAAKM,SAASC,IACZF,EAAKG,KAAK,IAAI9B,EAAU6B,GAAK,IAExBF,CAAI,EAVXI,GAAmBH,SAASnB,IAC1Bc,EAAcS,OAAOvB,EAASF,cAAc,IAa1BG,SAASuB,iBAAiB,WAE9BL,SAASxB,IACvB,MAAM8B,EAAYxB,SAASC,cAAc,MACzCP,EAAM+B,MAAMD,EAAU,IAM1B,MAAME,EAAU1B,SAASuB,iBAAiB,QAE1CV,EAAcc,iBAAiB,SAAUC,IAEvC,IAAIC,EAAYD,EAAME,OAAOC,QAAQ,QAGrC,GAAIH,EAAME,OAAOC,QAAQ,QAAS,CAChC,IAAK,IAAIC,EAAI,EAAGA,EAAIN,EAAQO,OAAQD,IAElCN,EAAQM,GAAGE,UAAUC,OAAO,UAG9BN,EAAUK,UAAUE,IAAI,UACxB,IAAIC,EAA0BR,EAAUS,aAAa,SAErD,MAAMC,EAAYvC,SAASc,cAAc,yBAC3Bd,SAASc,cAAc,qBAEjCe,IAAcU,GAChBvB,EAAcD,EAAavB,MAAMgD,MAAM,EAAGxB,EAAYiB,OAAS,GAC/DlB,EAAavB,MAAQwB,GACZa,IACTb,EAAcD,EAAavB,OAAS6C,EAExC,KAwBFtB,EAAaY,iBAAiB,WAAYC,IAEvBA,EAAMjC,KAtBvBoB,EAAaY,iBAAiB,SAAS,KACrCX,EAAcD,EAAavB,MAC3B,IAAIiD,EAAazB,EAAYA,EAAYiB,OAAS,GAC9CS,EAAiBD,EAAWE,cAChCC,QAAQC,IAAIJ,EAAWE,eAEvB,WACE,IAAIG,EAAkB9C,SAASc,cAC7B,cAAc4B,MAEhB,IAAK,IAAIV,EAAI,EAAGA,EAAIN,EAAQO,OAAQD,IAClCN,EAAQM,GAAGE,UAAUC,OAAO,UAG9BW,EAAgBZ,UAAUE,IAAI,SAChC,CACAW,EAAiB,GAQK,G","sources":["webpack://my-webpack-project/./src/key-module.js","webpack://my-webpack-project/./src/key.js","webpack://my-webpack-project/./src/index.js"],"sourcesContent":["export class KeyButton {\n  constructor({\n    value, size, space, code\n  }) {\n    this.value = value;\n    this.size = size;\n    this.space = space;\n    this.code = code;\n  }\n\n  generateKey() {\n    let template = \"\";\n    let keyboard = document.createElement(\"button\");\n    keyboard.className = \"key\";\n    if (this.size) {\n      let pullsize = `${this.size}`;\n      keyboard.style.width = pullsize;\n    }\n    keyboard.setAttribute(\"value\", this.value);\n    if (this.value) {\n      template += `<span\">${this.value}`;\n      template += \"</span>\";\n    }\n    if (this.space) keyboard.setAttribute(\"space\", this.space);\n    if (this.code) keyboard.setAttribute(\"code\", this.code);\n    keyboard.innerHTML = template;\n    return keyboard;\n  }\n}\n","const small = \"3rem\";\nconst big = \"6rem\";\nconst smallA = \"4rem\";\nconst smallB = \"5.5rem\";\nconst space = \"10rem\";\nexport const data = [\n  {\n    value: \"`\",\n    size: small\n  },\n  {\n    value: \"1\",\n    size: small\n  },\n  {\n    value: \"2\",\n    size: small\n  },\n  {\n    value: \"3\",\n    size: small\n  },\n  {\n    value: \"4\",\n    size: small\n  },\n  {\n    value: \"5\",\n    size: small\n  },\n  {\n    value: \"6\",\n    size: small\n  },\n  {\n    value: \"7\",\n    size: small\n  },\n  {\n    value: \"8\",\n    size: small\n  },\n  {\n    value: \"9\",\n    size: small\n  },\n  {\n    value: \"0\",\n    size: small\n  },\n  {\n    value: \"-\",\n    size: small\n  },\n  {\n    value: \"=\",\n    size: small\n  },\n  {\n    value: \"backspace\",\n    size: big,\n    space: true\n  },\n  {\n    value: \"tab\",\n    size: \"s\"\n  },\n  {\n    value: \"Q\",\n    size: small\n  },\n  {\n    value: \"W\",\n    size: small\n  },\n  {\n    value: \"E\",\n    size: small\n  },\n  {\n    value: \"R\",\n    size: small\n  },\n  {\n    value: \"T\",\n    size: small\n  },\n  {\n    value: \"Y\",\n    size: small\n  },\n  {\n    value: \"U\",\n    size: small\n  },\n  {\n    value: \"I\",\n    size: small\n  },\n  {\n    value: \"O\",\n    size: small\n  },\n  {\n    value: \"P\",\n    size: small\n  },\n  {\n    value: \"[\",\n    size: small\n  },\n  {\n    value: \"]\",\n    size: small\n  },\n  {\n    value: \"\\\\\",\n    size: small,\n    space: true\n  },\n  {\n    value: \"caps lock\",\n    size: smallB\n  },\n  {\n    value: \"A\",\n    size: small\n  },\n  {\n    value: \"S\",\n    size: small\n  },\n  {\n    value: \"D\",\n    size: small\n  },\n  {\n    value: \"F\",\n    size: small\n  },\n  {\n    value: \"G\",\n    size: small,\n    code: \"KeyG\"\n  },\n  {\n    value: \"H\",\n    size: small,\n    code: \"KeyH\"\n  },\n  {\n    value: \"J\",\n    size: small\n  },\n  {\n    value: \"K\",\n    size: small\n  },\n  {\n    value: \"L\",\n    size: small\n  },\n  {\n    value: \";\",\n    size: small\n  },\n  {\n    value: \"'\",\n    size: small\n  },\n  {\n    value: \"enter\",\n    size: smallB,\n    space: true\n  },\n  {\n    value: \"shift\",\n    size: big\n  },\n  {\n    value: \"Z\",\n    size: small\n  },\n  {\n    value: \"X\",\n    size: small\n  },\n  {\n    value: \"C\",\n    size: small\n  },\n  {\n    value: \"V\",\n    size: small\n  },\n  {\n    value: \"B\",\n    size: small\n  },\n  {\n    value: \"N\",\n    size: small\n  },\n  {\n    value: \"M\",\n    size: small\n  },\n  {\n    value: \"<\",\n    size: small\n  },\n  {\n    value: \">\",\n    size: small\n  },\n  {\n    value: \"/\",\n    size: small\n  },\n  {\n    value: \"shift\",\n    size: big,\n    space: true\n  },\n  {\n    value: \"ctrl\",\n    size: small\n  },\n  {\n    value: \"fn\",\n    size: small\n  },\n  {\n    value: \"win\",\n    size: small\n  },\n  {\n    value: \"alt\",\n    size: smallA\n  },\n  {\n    value: \"\",\n    size: space\n  },\n  {\n    value: \"alt\",\n    size: smallA\n  },\n  {\n    value: \"fn\",\n    size: small\n  },\n  {\n    value: \"ctrl\",\n    size: small\n  },\n  {\n    value: \"←\",\n    size: small\n  },\n  {\n    value: \"↓\",\n    size: small\n  },\n  {\n    value: \"→\",\n    size: small\n  }\n];\n","/* eslint-disable no-plusplus */\n/* eslint-disable no-loop-func */\n/* eslint-disable no-undef */\nimport { KeyButton } from \"./key-module\";\nimport { data } from \"./key\";\n\nlet placeKeyboard = document.querySelector(\".key__container\");\nconst mainTextArea = document.querySelector(\".text_input_field\");\nlet contentArea = mainTextArea.value;\n\n// eslint-disable-next-line no-shadow\nconst renderKeyboardToDom = () => {\n  // eslint-disable-next-line no-use-before-define\n  generateKeys(data).forEach((keyboard) => {\n    placeKeyboard.append(keyboard.generateKey());\n  });\n};\n\nconst generateKeys = () => {\n  let keys = [];\n  data.forEach((key) => {\n    keys.push(new KeyButton(key));\n  });\n  return keys;\n};\nrenderKeyboardToDom(data);\n\nlet enterlinebutton = document.querySelectorAll(\"[space]\");\nconst lineBreak = () => {\n  enterlinebutton.forEach((space) => {\n    const brElement = document.createElement(\"br\");\n    space.after(brElement);\n  });\n};\n\nlineBreak();\n\nconst buttons = document.querySelectorAll(\".key\");\n\nplaceKeyboard.addEventListener(\"click\", (event) => {\n  // Отлавливаем элемент в родители на который мы нажали\n  let activeKey = event.target.closest(\".key\");\n\n  // Проверяем тот ли это элемент который нам нужен\n  if (event.target.closest(\".key\")) {\n    for (let i = 0; i < buttons.length; i++) {\n      // Убираем у других\n      buttons[i].classList.remove(\"active\");\n    }\n    // Добавляем тому на который нажали\n    activeKey.classList.add(\"active\");\n    let attribyteActiveKeyValue = activeKey.getAttribute(\"value\");\n\n    const backspace = document.querySelector(\"[value = 'backspace']\");\n    const enter = document.querySelector(\"[value = 'enter']\");\n    // contentArea = mainTextArea.value += attribyteActiveKeyValue;\n    if (activeKey === backspace) {\n      contentArea = mainTextArea.value.slice(0, contentArea.length - 1);\n      mainTextArea.value = contentArea;\n    } else if (activeKey) {\n      contentArea = mainTextArea.value += attribyteActiveKeyValue;\n    }\n  }\n});\n\nconst addsymbolToText = () => {\n  mainTextArea.addEventListener(\"input\", () => {\n    contentArea = mainTextArea.value;\n    let lastsymbol = contentArea[contentArea.length - 1];\n    let lastsymbolCAPS = lastsymbol.toUpperCase();\n    console.log(lastsymbol.toUpperCase());\n\n    function findletterINKEY() {\n      let keyScreenActive = document.querySelector(\n        `.key[value=${lastsymbolCAPS}]`\n      );\n      for (let i = 0; i < buttons.length; i++) {\n        buttons[i].classList.remove(\"active\");\n      }\n\n      keyScreenActive.classList.add(\"active\");\n    }\n    findletterINKEY();\n  });\n};\n\nmainTextArea.addEventListener(\"keydown\", (event) => {\n  // console.log(`event.key ${event.key} event.code ${event.code}`);\n  let codeKey = `${event.code}`;\n  // console.log(buttons);\n  addsymbolToText(codeKey);\n});\n\n/*\nplaceKeyboard.addEventListener(\"click\", (event) => {\n  console.log(event.target);\n\n});\n\nplaceKeyboard.addEventListener(\"keydown\", function (index) {\n  for (let i = 0; i < button.length; i++) {\n    // UpperCase() method returns the value of the string converted to uppercase\n    if (button[i].innerHTML == index.key.toUpperCase()) {\n      button[i].classList.add(\"active\");\n    }\n  }\n  // innerHTML property is part of the Document Object Model\n  p.innerHTML += index.key;\n  if (index.key == \"Backspace\") {\n    p.innerHTML = p.innerHTML.slice(0, -10);\n  }\n});\nplaceKeyboard.addEventListener(\"keyup\", function (index) {\n  for (let j = 0; j < button.length; j++) {\n    if (button[j].innerHTML == index.key.toUpperCase()) {\n      button[j].classList.remove(\"active\");\n    }\n  }\n});\n*/\n"],"names":["KeyButton","constructor","value","size","space","code","this","generateKey","template","keyboard","document","createElement","className","pullsize","style","width","setAttribute","innerHTML","small","big","smallA","smallB","data","placeKeyboard","querySelector","mainTextArea","contentArea","keys","forEach","key","push","generateKeys","append","querySelectorAll","brElement","after","buttons","addEventListener","event","activeKey","target","closest","i","length","classList","remove","add","attribyteActiveKeyValue","getAttribute","backspace","slice","lastsymbol","lastsymbolCAPS","toUpperCase","console","log","keyScreenActive","findletterINKEY"],"sourceRoot":""}